defmodule ColoringBook.Repo.Migrations.AddUsers do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :username, :citext, null: false
      add :hashed_password, :text, null: false
    end

    create unique_index(:users, [:username], name: "users_unique_username_index")

    alter table(:generations) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")
    end

    alter table(:canvases) do
      modify :id, :uuid, default: fragment("uuid_generate_v4()")

      add :user_id,
          references(:users,
            column: :id,
            name: "canvases_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:canvases, "canvases_user_id_fkey")

    alter table(:canvases) do
      remove :user_id
      modify :id, :uuid, default: nil
    end

    alter table(:generations) do
      modify :id, :uuid, default: nil
    end

    drop_if_exists unique_index(:users, [:username], name: "users_unique_username_index")

    drop table(:users)
  end
end